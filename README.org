#+TITLE: Aggregate your syslog messages & filter for those that matter in real time.
#+Options: num:nil
#+STARTUP: odd
#+Style: <style> h1,h2,h3 {font-family: arial, helvetica, sans-serif} </style>

* How It Works
  Tails acts as a syslog server, collecting messages via UDP. Messages are broadcasted to your browser using a HTML 5 WebSocket.

  The browser is responsible for message filtering, separating them into defined "streams". 

  You can create steams, each with their own filter terms.

  For example: 

  You could tail SSH logins with the term:
  : sshd
  
  Messages are non-persistent and they are automatically pruned.

* Demo
  You can find a working demo [[http://portertech.no.de/][Here]], protected with HTTP auth (admin:admin).

* Requirements
*** Clients
  - rsyslog or syslog-ng

*** Server
  - Node.js >= v0.4.9

* Install & Configure
** Server
*** Install with Chef
  For those who use OpsChef, a cookbook is available [[https://github.com/portertech/cooking-tails][Here]].

*** Install Node.js & NPM
  Please refer to Joyent's fantastic documentation
  : https://github.com/joyent/node/wiki/Installation

*** Install Tails
  : npm install tails -g
  
*** Run 
  Node.js process monitoring is outside the scope of this readme, you can run with nohup.
  : export TAILS_SYSLOG_PORT=5140
  : export TAILS_HTTP_PORT=8080
  : nohup tails &

** Clients
  Append the following to your configuration file for your prefered syslog service.

  Replace "tails.example.ca" with the hostname or IP address of your server running Tails.

*** Rsyslog
  : $template FwdTmp,"<%%PRI%>%TIMESTAMP% %HOSTNAME% %APP-NAME% %PROCID% %msg%"
  : $ActionForwardDefaultTemplate FwdTmp
  : *.* @tails.example.ca:5140

*** Syslog-ng
  : destination tails { udp("tails.example.ca" port(5140)); };
  : log { source(s_all); destination(tails); };

  Restart the service after the change.

* What's Next
  - [ ] Take a snapshot of a stream (persist)
  - [ ] Export a stream snapshot to JSON or CSV

* CRUD
  curl -id 'name=foo' localhost/streams

  curl -i localhost/streams --> {"foo":{"name": "foo", "terms":[]}

  curl -id 'term=bar' localhost/streams/foo/terms

  curl -i localhost/streams --> {"foo":{"name": "foo", "terms":["bar"]}}

  curl -iX DELETE localhost/streams/foo/terms/bar

  curl -iX DELETE localhost/streams/foo

* Contributors
  [[https://github.com/portertech][Sean Porter]]

  [[https://github.com/amdprophet][Justin Kolberg]]
