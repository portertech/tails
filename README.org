#+TITLE: Aggregate your syslog messages & filter for those that matter.
#+Options: num:nil
#+STARTUP: odd
#+Style: <style> h1,h2,h3 {font-family: arial, helvetica, sans-serif} </style>

Tails, live syslog tailing with term filtering by Sean Porter & Justin Kolberg.

Screenshots: http://i.pgu.me/3PshjFbE_original.png http://i.pgu.me/oCGCzaYi_original.png

Screencast: http://www.youtube.com/watch?v=6yJbBRcPs_M&hd=1

Demo: http://portertech.no.de/ username: admin password: admin

* Requirements
*** Clients
  - rsyslog or syslog-ng

*** Server
  - Node.js v0.4.1 http://nodejs.org/

*** Interface
  - A browser with WebSocket support

* Configuration
** Server
*** Install Node.js v0.4.1
  : $ cd /usr/local/src
  : $ wget http://nodejs.org/dist/node-v0.4.1.tar.gz
  : $ tar -xvf node-v0.4.1.tar.gz
  : $ cd node-v0.4.1
  : $ export JOBS=2 # optional, sets number of parallel commands.
  : $ ./configure --prefix=/usr/local/node
  : $ make
  : $ sudo make install
  : $ export PATH=/usr/local/node/bin:$PATH
  : $ echo "export PATH=/usr/local/node/bin:$PATH" | sudo tee -a /etc/profile
  : $ node -v

** Clients
Append the following to your configuration file for your prefered syslog service, where "tails.example.ca" is the hostname or IP address of your server running Tails.
*** Rsyslog
  : *.* @tails.example.ca:514
*** Syslog-ng
  : destination tails { udp("tails.example.ca" port(514)); };
  : log { source(s_all); destination(tails); };

* How it works
  - Tails accepts syslog messages on port 514 (UDP), parses, then broadcasts to your browser using a WebSocket.
  - You can create custom tab (streams), each with their own filter terms to organize messages.
  - Messages are non-persistent and they are automatically pruned.

* Next
  - Pause & resume tail (buffer incoming messages, buffer is at x%, forced resume for buffer is full)
  - Export paused tail to csv

curl -id 'name=foo' localhost/streams
curl -i localhost/streams --> {"foo":{"name": "foo", "terms":[]}
curl -id 'term=bar' localhost/streams/foo/terms
curl -i localhost/streams --> {"foo":{"name": "foo", "terms":["bar"]}}
curl -iX DELETE localhost/streams/foo/terms/bar
curl -iX DELETE localhost/streams/foo
